/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_intel_qat_ZstdJNI */

#ifndef _Included_com_intel_qat_ZstdJNI
#define _Included_com_intel_qat_ZstdJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    setup
 * Signature: (Lcom/intel/qat/QatZipper;III)V
 */
JNIEXPORT void JNICALL Java_com_intel_qat_ZstdJNI_setup(JNIEnv *, jclass,
                                                        jobject, jint, jint,
                                                        jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    maxCompressedSize
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_maxCompressedSize(JNIEnv *,
                                                                    jclass,
                                                                    jlong,
                                                                    jlong);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    compressByteArray
 * Signature: (J[BII[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_compressByteArray(
    JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jint,
    jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    decompressByteArray
 * Signature: (J[BII[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_decompressByteArray(
    JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jint,
    jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    compressByteBuffer
 * Signature: (JLjava/nio/ByteBuffer;[BII[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_compressByteBuffer(
    JNIEnv *, jclass, jlong, jobject, jbyteArray, jint, jint, jbyteArray, jint,
    jint, jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    decompressByteBuffer
 * Signature: (JLjava/nio/ByteBuffer;[BII[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_decompressByteBuffer(
    JNIEnv *, jclass, jlong, jobject, jbyteArray, jint, jint, jbyteArray, jint,
    jint, jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    compressDirectByteBuffer
 * Signature: (JLjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;III)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_compressDirectByteBuffer(
    JNIEnv *, jclass, jlong, jobject, jint, jint, jobject, jint, jint, jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    decompressDirectByteBuffer
 * Signature: (JLjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;III)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_decompressDirectByteBuffer(
    JNIEnv *, jclass, jlong, jobject, jint, jint, jobject, jint, jint, jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    compressDirectByteBufferSrc
 * Signature: (JLjava/nio/ByteBuffer;II[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_compressDirectByteBufferSrc(
    JNIEnv *, jclass, jlong, jobject, jint, jint, jbyteArray, jint, jint, jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    decompressDirectByteBufferSrc
 * Signature: (JLjava/nio/ByteBuffer;II[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_decompressDirectByteBufferSrc(
    JNIEnv *, jclass, jlong, jobject, jint, jint, jbyteArray, jint, jint, jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    compressDirectByteBufferDst
 * Signature: (JLjava/nio/ByteBuffer;[BIILjava/nio/ByteBuffer;III)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_compressDirectByteBufferDst(
    JNIEnv *, jclass, jlong, jobject, jbyteArray, jint, jint, jobject, jint,
    jint, jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    decompressDirectByteBufferDst
 * Signature: (JLjava/nio/ByteBuffer;[BIILjava/nio/ByteBuffer;III)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_decompressDirectByteBufferDst(
    JNIEnv *, jclass, jlong, jobject, jbyteArray, jint, jint, jobject, jint,
    jint, jint);

/*
 * Class:     com_intel_qat_ZstdJNI
 * Method:    teardown
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_ZstdJNI_teardown(JNIEnv *, jclass,
                                                           jlong);

#ifdef __cplusplus
}
#endif
#endif
